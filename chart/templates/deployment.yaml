apiVersion: apps/v1
kind: Deployment
metadata:
  name: arvore-challenge
spec:
  selector:
    matchLabels:
      app: arvore-challenge
  replicas: {{ .Values.replicas_count }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: arvore-challenge
    spec:
      containers:
        - name: arvore-challenge
          image: "{{ .Values.env.ecr_regitry }}:{{ .Values.env.image_hash }}"
          ports:
            - name: http
              containerPort: 4000
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /health
              port: 4000
            initialDelaySeconds: 15
            periodSeconds: 60
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /health
              port: 4000
            initialDelaySeconds: 15
            periodSeconds: 60
            successThreshold: 1
          env:
            - name: MIX_ENV
              value: prod
            - name: URL_HOST
              value: {{ .Values.env.host }}
            - name: MYSQL_URL
              value: mysql-service
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql
                  key: username
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql
                  key: password
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql
                  key: database
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: phoenix
                  key: secret_key_base
